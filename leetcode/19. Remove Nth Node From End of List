/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(! head->next){
            return head->next;
        }
        
        ListNode* current_node_f = head;
        ListNode* current_node_s = head;
        ListNode* skip;
        
        for (int i = 0; i < n; i++){
            current_node_f = current_node_f->next;
        }
        
        if(! current_node_f){
            return head->next;
        }

        while(current_node_f->next){
            current_node_f = current_node_f->next;
            current_node_s = current_node_s->next;
        }
        skip = current_node_s->next;
        current_node_s->next = skip->next;
        return head;
    }
};
两个边界条件好烦啊
[1] 1
[1,2] 2
Runtime: 4 ms, faster than 86.33% of C++ online submissions for Remove Nth Node From End of List.
Memory Usage: 8.6 MB, less than 67.11% of C++ online submissions for Remove Nth Node From End of List.
