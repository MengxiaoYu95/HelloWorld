#include <vector>  //冒泡排序，从后往前更新，每次比较两个，如果较小就互换，第一次0-i，第二次1-i。。。以此类推，复杂度为N^2
#include <iostream>

int main(){
    std::vector<int> nums = {5,4,6,8,7,9,1,2,3};

    int len = nums.size();

    for ( int i = 0 ; i < len ; i++ ){
        for ( int j = len - 1; j >= i ; j-- ){
            if ( nums[j] < nums[j-1] ){
                int temp = nums[j-1];
                nums[j-1] = nums[j];
                nums[j] = temp;
            }
        }
    }

    for ( int i = 0 ; i < len ; i++ ){
        std::cout << nums[i] << ' ';
    }
}


#include <vector>  //插入排序，每次只交换最前一位和最小一位，复杂度一样是N平方
#include <iostream>

int main(){
    std::vector<int> nums = {5,4,6,8,7,9,1,2,3};

    int len = nums.size();
    int min,index;

    for ( int i = 0 ; i < len ; i++ ){
        min = nums[i];
        index = i;
        for ( int j = len - 1; j >= i ; j-- ){

            if ( nums[j] < min ){
                min = nums[j];
                index = j;
            }
        }
        nums[index] = nums[i];
        nums[i] = min;
    }

    for ( int i = 0 ; i < len ; i++ ){
        std::cout << nums[i] << ' ';
    }
}


#include <vector> //插入排序。。。每次假定前面是已排序好的，找到位置插入后一个
#include <iostream>

int main(){
    std::vector<int> nums = {5,4,6,8,7,9,1,2,3};

    int len = nums.size();
    int min,index;

    for ( int i = 0 ; i < len ; i++ ){
        int j = i;
        int temp = nums[i];
        while ( nums[j] < nums[j-1] ){
            temp = nums[j-1];
            nums[j-1] = nums[j];
            nums[j] = temp;
            j--;
        }
    }

    for ( int i = 0 ; i < len ; i++ ){
        std::cout << nums[i] << ' ';
    }
}
