class Solution {
public:
    int jump(vector<int>& nums) {
        if (nums.size() == 1) return 0;
        int current_index,next_index,possible_length,max_reach,jumps;
        
        current_index = jumps = max_reach = 0;
        possible_length = nums[0];
        
        while(current_index < nums.size()-1){
            max_reach = current_index;
            jumps += 1;
            
            for ( int i = 1; i <= nums[current_index] ; i++){
                if ( current_index + i >= nums.size() - 1){
                    return jumps;
                }
                
                
                if ( max_reach < current_index + i + nums[current_index+i]) {
                    max_reach = current_index + i  + nums[current_index+i];
                    next_index = current_index + i;
                }

            }
            
            
            current_index = next_index;
        }
        
        return jumps;
    }
};
