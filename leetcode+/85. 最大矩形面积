class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        int h = matrix.size();
        if ( h == 0) return 0;
        int len = matrix[0].size();
        if ( len == 0 ) return 0 ;
        int height[len];
        int left[len];
        int right[len];

        for ( int i = 0 ; i < len; i++ ){
            height[i] = 0;
        }
        for ( int i = 0 ; i < len ; i++ ){
            left[i] = 0;
            right[i] = len;
        }
        int max = 0;
        for ( int i = h - 1; i >= 0 ; i-- ){
            int cur_left = 0;
            int cur_right = len;
            for ( int j = 0 ; j < len ; j++ ){
                if ( matrix[i][j] == '1'){
                    height[j] += 1;
                    left[j] = ( left[j] > cur_left ) ? left[j] : cur_left;
                }
                else{
                    height[j] = 0;
                    left[j] = 0;
                    cur_left = j+1;
                }
            }
            for(int j = len - 1; j >= 0; j--) {
                if(matrix[i][j] == '1') {
                    right[j] = (right[j] < cur_right) ? right[j] : cur_right;
                }
                else {
                    right[j] = len; 
                    cur_right = j;
                }    
            }
            // update area
            for(int j = 0; j < len; j++) {
                max = (max > (right[j] - left[j]) * height[j]) ? max : (right[j] - left[j]) * height[j];
            }

        }

        return max;

    }
};
