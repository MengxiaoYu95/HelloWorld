/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int sum = 0;
        ListNode* new_node = new ListNode(0);
        ListNode* head = new_node;
        
        while ( l1 != nullptr or l2 != nullptr or sum != 0){
            ListNode* next_node = new ListNode(0);
            new_node->next = next_node;
            new_node = new_node->next;
            if ( l1 != nullptr ){
                sum += l1->val;
                l1 = l1->next;
            }
            if ( l2 != nullptr ){
                sum += l2->val;
                l2 = l2->next;
            }
            new_node->val += (sum%10);
            sum = sum/10;
        }
        
        return head->next;
    }
};
