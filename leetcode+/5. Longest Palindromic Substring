class Solution {
public:
    string longestPalindrome(string s) {
        if ( s.size() <= 1 )  return s;
        int matrix[s.size()][s.size()];
        int length = 1;
        int start = 0;
        for ( int i = 0 ; i < s.size() ; i++ ){
            for ( int j = i; j < s.size() ; j++ ){
                if ( j == i ){
                    matrix[i][j] = 1;
                }
                else if( j == i+1 && s[i] == s[j] ){
                    matrix[i][j] = 1;
                    if ( length == 1){
                        length = 2;
                        start = i;
                    }
                }
                else{
                    matrix[i][j] = 0;
                }
            }
        }
        
        for ( int l = 3; l <= s.size(); l++ ){ //按长度的增加进行循环
            for ( int i = 0; i + l - 1 < s.size() ; i++ ){
                int j = i + l - 1;
                if ( s[i] == s[j] && matrix[i+1][j-1] == 1 ){
                    matrix[i][j] = 1;
                    start = i;
                    length = l;
                }
            }
        }
        
        return s.substr(start,length);
        
        
    }
};
