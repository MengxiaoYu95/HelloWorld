class Solution {
public:
    int maxArea(vector<int>& height) {
        int area = 0;
        int length = height.size() - 1;
        auto front_it = height.begin();
        auto back_it = height.end();
        back_it--;
        
        
        while(true){
            if(*front_it < *back_it){
                area = std::max(area,*front_it * length);
                if(front_it != back_it){
                    front_it++;
                    length--;
                }
                else{
                    break;
                }
            }
            else{
                area = std::max(area,*back_it * length);
                if(front_it != back_it){
                    back_it--;
                    length--;

                }
                else{
                    break;
                }
            }
        }
        return area;
    }
};

______________________________________________________________________________


    int maxArea(vector<int>& height) {
        int res=0,minh;
        int i=0;
        int j=height.size()-1;
        while(i<j)
        {
            minh=min(height[i],height[j]);
            res=max(res,minh*(j-i));
            if(height[i]<height[j])
                i++;
            else
                j--;
        }
        return res;
    }
